{"version":3,"sources":["Skyss.js","App.js","serviceWorker.js","index.js"],"names":["stops","Skyss","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","schedule","loaded","byparken","flesland","time","interval","currentstop","displaytype","showsettings","setDisplay","bind","assertThisInitialized","setPrefered","changeLayout","_this2","setInterval","setState","Date","toLocaleString","split","cookies","Cookies","temp","get","undefined","set","path","expires","now","pickStop","value","_this3","clearInterval","selectstop","stopname","forEach","element","setQuery","options","headers","Content-Type","ET-Client-Name","performQuery","intervall","_this4","axios","post","then","response","data","filterSchedules","catch","error","console","log","stopCode","query","concat","variables","departure","departureTime","currentTime","departureSubstring","substring","lastIndexOf","setHours","setMinutes","_this5","byparkenTemp","fleslandTemp","stopPlace","estimatedCalls","destinationDisplay","frontText","parseTime","aimedArrivalTime","push","type","val","_this6","name","remove","tempsettings","_this7","react_default","a","createElement","className","onClick","onChange","e","target","map","rute","idx","key","React","Component","App","es6","src_Skyss","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2UAUIA,EAAQ,CACV,CAAC,WAAY,OACb,CAAC,aAAc,OACf,CAAC,YAAU,OACX,CAAC,UAAW,OACZ,CAAC,gBAAiB,OAClB,CAAC,WAAY,OACb,CAAC,gBAAiB,OAClB,CAAC,YAAa,OACd,CAAC,iBAAkB,OACnB,CAAC,eAAgB,OACjB,CAAC,UAAW,OACZ,CAAC,UAAW,OACZ,CAAC,MAAO,OACR,CAAC,mBAAoB,OACrB,CAAC,kBAAmB,OACpB,CAAC,gBAAiB,OAClB,CAAC,cAAY,OACb,CAAC,SAAU,OACX,CAAC,UAAW,OACZ,CAAC,iBAAY,OACb,CAAC,eAAgB,OACjB,CAAC,eAAgB,OACjB,CAAC,UAAW,OACZ,CAAC,mBAAoB,OACrB,CAAC,gBAAiB,OAClB,CAAC,kBAAmB,QA4QPC,cAtQb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,SAAU,GACVC,QAAQ,EACRC,SAAU,GACVC,SAAU,GACVC,KAAM,KACNC,SAAU,KACVC,YAAa,KACbC,YAAa,EACblB,MAAO,KACPmB,cAAc,GAEhBhB,EAAKiB,WAAajB,EAAKiB,WAAWC,KAAhBjB,OAAAkB,EAAA,EAAAlB,CAAAD,IAClBA,EAAKoB,YAAcpB,EAAKoB,YAAYF,KAAjBjB,OAAAkB,EAAA,EAAAlB,CAAAD,IACnBA,EAAKqB,aAAerB,EAAKqB,aAAaH,KAAlBjB,OAAAkB,EAAA,EAAAlB,CAAAD,IAjBHA,mFAqBE,IAAAsB,EAAAnB,KACnBoB,YAAY,WACVD,EAAKE,SAAS,CACZZ,MAAM,IAAIa,MAAOC,iBAAiBC,MAAM,KAAK,MAE9C,KAGH,IAAMC,EAAU,IAAIC,IAChBC,EAAOF,EAAQG,IAAI,gBAEX,SAATD,QAA4BE,IAATF,GACpBF,EAAQK,IAAI,eAAe,WAAY,CAACC,KAAM,IAAKC,QAAS,IAAIV,KAAKA,KAAKW,MAAM,UAGjFjC,KAAKkC,SAAST,EAAQG,IAAI,kDAIpBO,GAAO,IAAAC,EAAApC,KAEdqC,cAAcrC,KAAKI,MAAMM,UAEzB,IAAI4B,EAAa,KACbC,EAAW,KAEb7C,EAAM8C,QAAQ,SAAAC,GACVA,EAAQ,KAAON,IAEjBG,EAAaF,EAAKM,SAASD,EAAQ,IACnCF,EAAWE,EAAQ,MAIvB,IAAIE,EAAU,CACZC,QAAS,CACPC,eAAgB,mBAChBC,iBAAkB,gCAItB9C,KAAK+C,aAAaT,EAAYK,GAE9B,IAAIK,EAAY5B,YAAY,WAC1BgB,EAAKW,aAAaT,EAAYK,IAC7B,KAEH3C,KAAKqB,SAAS,CACZX,SAAUsC,EACVrC,YAAa4B,yCAKJD,EAAYK,GAAS,IAAAM,EAAAjD,KAChCkD,IAAMC,KAAK,kDAAmDb,EAAYK,GACvES,KAAK,SAACC,GACLJ,EAAK5B,SAAS,CACZhB,SAAUgD,EAASC,KACnBhD,QAAQ,IAEV2C,EAAKM,oBACJC,MAAM,SAAAC,GACPC,QAAQC,IAAI,gDAA8CF,EAAMJ,6CAI7DO,GA0BP,MAxBW,CACTC,MAAK,8EAAAC,OAEuCF,EAFvC,uoBAqBLG,UAAW,sCAKLC,GAER,IAAIC,EAAgB,IAAI3C,KACpB4C,EAAc,IAAI5C,KAClB6C,EAAqBH,EAAUI,UAAUJ,EAAUK,YAAY,KAAO,EAAGL,EAAUK,YAAY,MAEnG,GAA+B,IAA3BrE,KAAKI,MAAMQ,YAEb,OAAOuD,EAEF,GAA+B,IAA3BnE,KAAKI,MAAMQ,YAAmB,CAEvCqD,EAAcK,SAASH,EAAmB3C,MAAM,KAAK,IACrDyC,EAAcM,WAAWJ,EAAmB3C,MAAM,KAAK,IACvD,IAAIf,GAAUwD,EAAgBC,GAAe,IAAQ,GACrD,OAAQzD,GAAQ,GAAKA,EAAO,IAAM,EAAIA,EAAO,OAAS,gDAKxC,IAAA+D,EAAAxE,KACZyE,EAAe,GACfC,EAAe,GAEnB1E,KAAKI,MAAMC,SAASiD,KAAKqB,UAAUC,eAAepC,QAAQ,SAAAC,GAExD,GAA6C,aAAzCA,EAAQoC,mBAAmBC,WAAuD,aAA3BN,EAAKpE,MAAMO,YAA4B,CAChG,IAAIqD,EAAYQ,EAAKO,UAAUtC,EAAQuC,kBACvB,MAAbhB,GACDS,EAAaQ,KAAKjB,GAKtB,GAA6C,oBAAzCvB,EAAQoC,mBAAmBC,WAA8D,oBAA3BN,EAAKpE,MAAMO,YAAmC,CAC9G,IAAIqD,EAAYQ,EAAKO,UAAUtC,EAAQuC,kBACtB,MAAbhB,GACFU,EAAaO,KAAKjB,MAOxBhE,KAAKqB,SAAS,CACZd,SAAUkE,EACVjE,SAAUkE,uCAIHQ,GAAM,IAGXC,EAHWC,EAAApF,KAIgB,IAA3BA,KAAKI,MAAMQ,YACbuE,EAAM,EAC8B,IAA3BnF,KAAKI,MAAMQ,cACpBuE,EAAM,GAERnF,KAAKqB,SAAS,CACZT,YAAauE,GACZ,WAAQC,EAAK7B,wDAGN8B,GAEV,IAAI5D,EAAU,IAAIC,SAGAG,IAFDJ,EAAQG,IAAI,kBAG3BH,EAAQ6D,OAAO,gBACf7D,EAAQK,IAAI,eAAeuD,EAAM,CAACtD,KAAM,IAAKC,QAAS,IAAIV,KAAKA,KAAKW,MAAM,gDAIjEpB,GAEX,IAAI0E,EAED1E,EACD0E,GAAe,EACP1E,IACR0E,GAAe,GAGjBvF,KAAKqB,SAAS,CACZR,aAAc0E,qCAKT,IAAAC,EAAAxF,KACP,OACEyF,EAAAC,EAAAC,cAAA,WAC6B,MAA1B3F,KAAKI,MAAMO,YACV8E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAW,iBAAiBC,QAAS,WAAOL,EAAKtE,aAAasE,EAAKpF,MAAMS,gBAAiBb,KAAKI,MAAMS,aAAe,QAAU,gBAAtI,KACA4E,EAAAC,EAAAC,cAAA,OAAKC,UAAW5F,KAAKI,MAAMS,aAAe,eAAiB,gBAC3D4E,EAAAC,EAAAC,cAAA,0BACCF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAWE,SAAU,SAACC,GAAD,OAAOP,EAAKtD,SAAS6D,EAAEC,OAAO7D,QAAQA,MAAkC,OAA3BnC,KAAKI,MAAMO,YAAuB,WAAaX,KAAKI,MAAMO,aAC1IjB,EAAMuG,IAAI,SAAUC,EAAMC,GACzB,OAAQV,EAAAC,EAAAC,cAAA,UAAQS,IAAKD,GAAMD,EAAK,QAItCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBC,QAAS7F,KAAKc,YAAwC,IAA3Bd,KAAKI,MAAMQ,YAAoB,WAAa,cAA1G,KACA6E,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBC,QAAS,WAAOL,EAAKvE,YAAYuE,EAAKpF,MAAMO,eAA/E,uBAGF8E,EAAAC,EAAAC,cAAA,OAAKC,UAAW5F,KAAKI,MAAMS,aAAe,GAAK,UAC/C4E,EAAAC,EAAAC,cAAA,OAAKC,UAAW5F,KAAKI,MAAMS,aAAe,WAAa,YACvD4E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQ5F,KAAKI,MAAMO,cAEhC8E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZ5F,KAAKI,MAAMK,MAEdgF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UACI3F,KAAKI,MAAME,OAA0BN,KAAKI,MAAMI,SAASyF,IAAI,SAAUC,EAAMC,GAC7E,OAAQV,EAAAC,EAAAC,cAAA,MAAIS,IAAKD,GAAMD,KADH,iBAK1BT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UACI3F,KAAKI,MAAME,OAA0BN,KAAKI,MAAMG,SAAS0F,IAAI,SAAUC,EAAMC,GAC7E,OAAQV,EAAAC,EAAAC,cAAA,MAAIS,IAAKD,GAAMD,KADH,mBAK1BT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qCA9PMU,IAAMC,WChBXC,MAjBf,WAEE,OACEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACAf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAACc,EAAD,UCDYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,KAAK,SAAAmE,GACjCA,EAAaC","file":"static/js/main.9af1c223.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport styling from './styling.css';\r\nimport Firebase from 'firebase';\r\nimport config from './config';\r\nimport { Cookies } from 'react-cookie';\r\n\r\n\r\n\r\n\r\nlet stops = [\r\n  ['Byparken', 30859],\r\n  ['Nonneseter', 30862],\r\n  ['Nygård', 58545],\r\n  ['Florida', 58544],\r\n  ['Danmarksplass', 31372],\r\n  ['Kronstad', 31374],\r\n  ['Brann stadion', 31377],\r\n  ['Wergeland', 31379],\r\n  ['Sletten senter', 31382],\r\n  ['Slettebakken', 31384],\r\n  ['Fantoft', 31388],\r\n  ['Paradis', 58543],\r\n  ['Hop', 29815],\r\n  ['Nesttun terminal', 58542],\r\n  ['Nesttun sentrum', 58541],\r\n  ['Skjoldskiftet', 59851],\r\n  ['Mårdalen', 58540],\r\n  ['Skjold', 29830],\r\n  ['Lagunen', 59849],\r\n  ['Råstølen', 58539],\r\n  ['Sandslivegen', 58538],\r\n  ['Sandslimarka', 30148],\r\n  ['Kokstad', 30154],\r\n  ['Birkelandskiftet', 58537],\r\n  ['Kokstadflaten', 30159],\r\n  ['Bergen lufthavn', 58536]\r\n];\r\n\r\n\r\nclass Skyss extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      schedule: [],\r\n      loaded: false,\r\n      byparken: [],\r\n      flesland: [],\r\n      time: null,\r\n      interval: null,\r\n      currentstop: null,\r\n      displaytype: 1,\r\n      stops: null,\r\n      showsettings: true\r\n    }\r\n    this.setDisplay = this.setDisplay.bind(this);\r\n    this.setPrefered = this.setPrefered.bind(this);\r\n    this.changeLayout = this.changeLayout.bind(this);\r\n\r\n  }\r\n\r\n   componentDidMount() {\r\n    setInterval(() => {\r\n      this.setState({\r\n        time: new Date().toLocaleString().split(',')[1]\r\n      })\r\n    }, 1000)\r\n\r\n \r\n    const cookies = new Cookies(); \r\n    let temp = cookies.get('preferedStop');\r\n\r\n    if(temp === 'null' || temp === undefined){\r\n      cookies.set('preferedStop','Byparken', {path: '/', expires: new Date(Date.now()+604800000)});\r\n    }\r\n    \r\n     this.pickStop(cookies.get('preferedStop'));\r\n\r\n  }\r\n\r\n  pickStop(value) {\r\n\r\n    clearInterval(this.state.interval);\r\n\r\n    let selectstop = null;\r\n    let stopname = null;\r\n\r\n      stops.forEach(element => {\r\n      if (element[0] === value) {\r\n\r\n        selectstop = this.setQuery(element[1]);\r\n        stopname = element[0];\r\n      }\r\n    });\r\n\r\n    let options = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'ET-Client-Name': 'jakob-rutetabell for bybane'\r\n      }\r\n    }\r\n\r\n    this.performQuery(selectstop, options);\r\n\r\n    let intervall = setInterval(() => {\r\n      this.performQuery(selectstop, options);\r\n    }, 60000)\r\n\r\n    this.setState({\r\n      interval: intervall,\r\n      currentstop: stopname\r\n    });\r\n\r\n  }\r\n\r\n  performQuery(selectstop, options) {\r\n    axios.post('https://api.entur.io/journey-planner/v2/graphql', selectstop, options)\r\n      .then((response) => {\r\n        this.setState({\r\n          schedule: response.data,\r\n          loaded: true\r\n        });\r\n        this.filterSchedules();\r\n      }).catch(error => {\r\n        console.log(\"Klarte ikke hente info, prøv igjen senere \", error.response)\r\n      });;\r\n  }\r\n\r\n  setQuery(stopCode) {\r\n\r\n    let body = {\r\n      query: `\r\n                query {\r\n                    stopPlace(id:\"NSR:StopPlace:${stopCode}\") {\r\n                        id\r\n                        name\r\n                        estimatedCalls(timeRange: 72100, numberOfDepartures: 20){\r\n                          aimedArrivalTime\r\n                          destinationDisplay{\r\n                            frontText\r\n                          }\r\n                          serviceJourney{\r\n                            journeyPattern{\r\n                              line{\r\n                                name\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n      variables: {}\r\n    }\r\n    return body;\r\n  }\r\n\r\n  parseTime(departure) {\r\n\r\n    let departureTime = new Date();\r\n    let currentTime = new Date();\r\n    let departureSubstring = departure.substring(departure.lastIndexOf(\"T\") + 1, departure.lastIndexOf(\":\"));\r\n\r\n    if (this.state.displaytype === 1) {\r\n\r\n      return departureSubstring;\r\n\r\n    } else if (this.state.displaytype === 0) {\r\n\r\n      departureTime.setHours(departureSubstring.split(':')[0]);\r\n      departureTime.setMinutes(departureSubstring.split(':')[1]);\r\n      let time = (((departureTime - currentTime) / 1000) / 60);\r\n      return (time >= 0 && time % 1 === 0 ? time + \" min\" : null);\r\n\r\n    }\r\n  }\r\n\r\n  filterSchedules() {\r\n    let byparkenTemp = [];\r\n    let fleslandTemp = [];\r\n\r\n    this.state.schedule.data.stopPlace.estimatedCalls.forEach(element => {\r\n\r\n      if (element.destinationDisplay.frontText === \"Byparken\" && this.state.currentstop !== \"Byparken\") {\r\n        let departure = this.parseTime(element.aimedArrivalTime);\r\n        if(departure != null){\r\n          byparkenTemp.push(departure);\r\n        }\r\n        \r\n      }\r\n\r\n      if (element.destinationDisplay.frontText === \"Bergen lufthavn\" && this.state.currentstop !== 'Bergen lufthavn') {\r\n        let departure = this.parseTime(element.aimedArrivalTime);\r\n         if(departure != null){\r\n          fleslandTemp.push(departure);\r\n         }\r\n        \r\n      }\r\n\r\n    });\r\n\r\n    this.setState({\r\n      byparken: byparkenTemp,\r\n      flesland: fleslandTemp\r\n    });\r\n  }\r\n\r\n  setDisplay(type) {\r\n\r\n    //drittkode men fungerer\r\n    let val;\r\n    if (this.state.displaytype === 1) {\r\n      val = 0;\r\n    } else if (this.state.displaytype === 0) {\r\n      val = 1;\r\n    }\r\n    this.setState({\r\n      displaytype: val\r\n    }, () => { this.filterSchedules() });\r\n  }\r\n\r\n  setPrefered(name){\r\n    \r\n    let cookies = new Cookies();\r\n    let tempCookie = cookies.get('preferedStop');\r\n\r\n    if(tempCookie !== undefined){\r\n      cookies.remove('preferedStop');\r\n      cookies.set('preferedStop',name, {path: '/', expires: new Date(Date.now()+604800000)})     \r\n    }\r\n  }\r\n\r\n  changeLayout(showsettings){\r\n\r\n    let tempsettings; \r\n\r\n    if(showsettings){\r\n      tempsettings = false; \r\n    }else if(!showsettings){\r\n      tempsettings = true; \r\n    }\r\n  \r\n    this.setState({\r\n      showsettings: tempsettings\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.currentstop != null ?\r\n          <div>\r\n            <h1>Skyss Rutetabell</h1>\r\n            <button className =\"button button6\" onClick={() => {this.changeLayout(this.state.showsettings)}}>{this.state.showsettings ? \"Skjul\" : \"Innstillinger\"} </button>\r\n            <div className={this.state.showsettings ? \"showsettings\" : \"hidesettings\"}>\r\n            <div> Velg stopp:\r\n             <select className=\"dropdown\" onChange={(e) => this.pickStop(e.target.value)} value={this.state.currentstop === null ? 'byparken' : this.state.currentstop}>\r\n                {stops.map(function (rute, idx) {\r\n                  return (<option key={idx}>{rute[0]}</option>)\r\n                })}\r\n              </select>  \r\n            </div>              \r\n            <div className=\"button-time\">\r\n              <button className=\"button button4\" onClick={this.setDisplay}>{this.state.displaytype === 1 ? \"Minutter\" : \"Klokkeslett\"} </button>\r\n              <button className=\"button button5\" onClick={() => {this.setPrefered(this.state.currentstop)}}>Sett som favoritt</button>      \r\n            </div>\r\n            </div>\r\n            <div className={this.state.showsettings ? \"\" : \"bottom\"}>\r\n            <div className={this.state.showsettings ? \"hidestop\" : \"showstop\"}>\r\n            <p className=\"stop\">{this.state.currentstop}</p>\r\n            </div>\r\n            <div className=\"time\">\r\n              {this.state.time}\r\n            </div>\r\n            <div className=\"right\">\r\n              <h3>Mot Flesland</h3>\r\n              <ul>\r\n                {!this.state.loaded ? \"Henter Ruter\" : this.state.flesland.map(function (rute, idx) {\r\n                  return (<li key={idx}>{rute}</li>)\r\n                })}\r\n              </ul>\r\n            </div>\r\n            <div className=\"left\">\r\n              <h3>Mot Byparken</h3>\r\n              <ul>\r\n                {!this.state.loaded ? \"Henter Ruter\" : this.state.byparken.map(function (rute, idx) {\r\n                  return (<li key={idx}>{rute}</li>)\r\n                })}\r\n              </ul>\r\n            </div></div></div> : \r\n            <div>\r\n              <h2>Henter data...</h2>\r\n            </div>}\r\n\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skyss","import React from 'react';\nimport './App.css';\nimport Skyss from './Skyss';\nimport { CookiesProvider } from 'react-cookie';\n\n\n\nfunction App() {\n  \n  return (\n    <CookiesProvider>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Skyss />\n      </header>\n    </div>\n    </CookiesProvider>\n  );\n}\n\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}